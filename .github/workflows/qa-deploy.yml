name: "Build and deploy QA"

on:
  push:
    branches:
      - main

jobs:
  build-images:
    name: "Build images Docker"
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout code"
        uses: actions/checkout@v2

      - name: "Login to Docker Hub"
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: "Build Docker image with Dockerfile"
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: ${{ secrets.DOCKER_USERNAME }}/nodejs-image-demo:latest

      - name: "Run tests"
        run: |
          echo "Running tests before pushing the image..."
          docker run --rm ${{ secrets.DOCKER_USERNAME }}/nodejs-image-demo:latest npm test

      - name: "Push Docker image"
        if: success()
        run: docker push ${{ secrets.DOCKER_USERNAME }}/nodejs-image-demo:latest

  deploy:
    name: "Deploy to QA"
    runs-on: ubuntu-latest

    needs: build-images

    steps:
      - name: "Checkout code"
        uses: actions/checkout@v2

      - name: "Install sshpass"
        run: sudo apt-get install -y sshpass

      - name: "deploy"
        run: |
          echo "Deploying to QA..."
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -t -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'ENDSSH'

          echo "Pulling the image..."
          docker pull ${{ secrets.DOCKER_USERNAME }}/nodejs-image-demo:latest

          echo "Stopping and removing the container..."
          docker stop nodejs-image-demo || true          
          docker rm nodejs-image-demo || true

          echo "Running the container..."
          docker run -d -p 80:8080 --name nodejs-image-demo --network host ${{ secrets.DOCKER_USERNAME }}/nodejs-image-demo:latest
          ENDSSH
