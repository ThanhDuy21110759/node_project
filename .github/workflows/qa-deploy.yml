name: "Build and deploy QA"

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    name: "Build and Test Docker Image"
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout code"
        uses: actions/checkout@v2

      - name: "Login to Docker Hub"
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: "Build Docker image"
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: ${{ secrets.DOCKER_USERNAME }}/nodejs-image-demo:latest

      - name: "Run tests inside Docker container"
        run: |
          echo "Running tests before pushing the image..."
          docker run --rm ${{ secrets.DOCKER_USERNAME }}/nodejs-image-demo:latest npm test

      - name: "Push Docker image to Docker Hub"
        if: success()
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: ${{ secrets.DOCKER_USERNAME }}/nodejs-image-demo:latest
          push: true

  deploy:
    name: "Deploy to QA Environment"
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: "Checkout code"
        uses: actions/checkout@v2

      - name: "Setup SSH key"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          sudo mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" | sudo tee ~/.ssh/id_rsa > /dev/null
          # chmod 600 ~/.ssh/id_rsa
          # ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: "Deploy to QA server"
        run: |
          echo "Deploying the latest image to the QA server..."
          sshpass -p -t '${{ secrets.SSH_PASSWORD }}' ssh -v -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} <<'ENDSSH'

          echo "Deploying the latest image to the QA server..."
          docker stop nodejs-image-demo || true
          docker system prune -f

          echo "Pulling the latest image from Docker Hub..."
          docker pull ${{ secrets.DOCKER_USERNAME }}/nodejs-image-demo:latest
          docker run -d -p 80:8080 --name nodejs-image-demo --network host ${{ secrets.DOCKER_USERNAME }}/nodejs-image-demo:latest
          ENDSSH
