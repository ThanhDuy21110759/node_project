name: "Build and deploy QA"

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    name: "Build and Test Docker Image"
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout code"
        uses: actions/checkout@v2

      - name: "Login to Docker Hub"
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: "Build Docker image"
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: ${{ secrets.DOCKER_USERNAME }}/nodejs-image-demo:latest

      - name: "Run tests inside Docker container"
        run: |
          echo "Running tests before pushing the image..."
          docker run --rm ${{ secrets.DOCKER_USERNAME }}/nodejs-image-demo:latest npm test

      - name: "Push Docker image to Docker Hub"
        if: success()
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: ${{ secrets.DOCKER_USERNAME }}/nodejs-image-demo:latest
          push: true

  deploy:
    name: "Deploy to QA Environment"
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: "Checkout code"
        uses: actions/checkout@v2

      # - name: "Configure SSH"
      #   uses: webfactory/ssh-agent@v0.9.0
      #   with:
      #     ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # - name: "Deploy to QA server"
      #   run: |
      #     echo "ip github runner"
      #     ifconfig

      #     # echo "Deploying the latest image to the QA server..."
      #     # ssh -T -o StrictHostKeyChecking=no -p 22 ubuntu@192.168.109.158 <<'ENDSSH'

      #     # echo "Deploying the latest image to the QA server..."
      #     # docker stop nodejs-image-demo || true
      #     # docker system prune -f

      #     # echo "Pulling the latest image from Docker Hub..."
      #     # docker pull ${{ secrets.DOCKER_USERNAME }}/nodejs-image-demo:latest
      #     # docker run -d -p 80:8080 --name nodejs-image-demo --network host ${{ secrets.DOCKER_USERNAME }}/nodejs-image-demo:latest
      #     # ENDSSH

      - name: SSH connection and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: |
            echo "ip github runner"
            ifconfig

            echo "Deploying the latest image to the QA server..."
            docker stop nodejs-image-demo || true
            docker system prune -f

            echo "Pulling the latest image from Docker Hub..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/nodejs-image-demo:latest
            docker run -d -p 80:8080 --name nodejs-image-demo --network host ${{ secrets.DOCKER_USERNAME }}/nodejs-image-demo:latest
